@page "/AddAdult"
@attribute [Authorize(Policy = "Adult")]
@using FamilyInformation.Models
@using FamilyInformation.Data
@inject IFamilyService FamilyService
@inject NavigationManager NavigationManager
<h3>Add Adult</h3>
<EditForm Model="@newAdultItem" OnValidSubmit="@AddNewAdultAsync">
    <DataAnnotationsValidator/>
    <ValidationSummary/>
    <div class="form-group">
        First name:<br/>
        <InputTextArea rows="1" @bind-Value="newAdultItem.FirstName"/>
    </div>
    <div class="form-group">
        Last name:<br/>
        <InputTextArea rows="1" @bind-Value="newAdultItem.LastName"/>
    </div>
    <div class="form-group">
        Hair Color:<br/>
        <InputTextArea rows="1" @bind-Value="newAdultItem.HairColor"/>
        
    </div>
    <div class="form-group">
        Eye Color:<br/>
        <InputTextArea rows="1" @bind-Value="newAdultItem.EyeColor"/>
    </div>
    <div class="form-group">
        Age:<br/>
        <InputNumber @bind-Value="newAdultItem.Age"/>
    </div>
    <div class="form-group">
        Weight:<br/>
        <InputNumber @bind-Value="newAdultItem.Weight"/>
    </div>
    <div class="form-group">
        Height:<br/>
        <InputNumber @bind-Value="newAdultItem.Height"/>
    </div>
    <div class="form-group">
        Job Title:<br/>
        <InputTextArea rows="1" @bind-Value="newAdultItem.JobTitle"/>
    </div>
    <div class="form-group">
            Sex:<br/>
            <InputTextArea rows="1" @bind-Value="newAdultItem.Sex"/>
        </div>
    <p class="actions">
        <button class="btn btn-outline-dark" type="submit">Create</button>
        <button class="btn btn-outline-dark" type="button" @onclick="Families">Cancel</button>
    </p>
</EditForm>

@code {
    private Adult newAdultItem = new Adult();

    private async Task AddNewAdultAsync()
    {
        await FamilyService.AddAdultAsync(newAdultItem);
        NavigationManager.NavigateTo("/SeeFamily");
    }

    private void Families()
    {
        NavigationManager.NavigateTo("/SeeFamily");
    }

}