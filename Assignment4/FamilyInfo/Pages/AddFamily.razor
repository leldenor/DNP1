@page "/AddFamily"
@attribute [Authorize(Policy = "Admin")]
@using FamilyInfo.Data
@using FamilyInfo.Models
@inject IFamilyService FamilyService
@inject NavigationManager NavigationManager

<h3>Add Family</h3>
@if (!added)
{
    <h4>Adult</h4>
    <EditForm Model="@newAdultItem" OnValidSubmit="@AddNewAdultAsync">
        <DataAnnotationsValidator/>
        <ValidationSummary/>
        <div class="form-group">
            First name:<br/>
            <InputTextArea rows="1" @bind-Value="newAdultItem.FirstName"/>
        </div>
        <div class="form-group">
            Last name:<br/>
            <InputTextArea rows="1" @bind-Value="newAdultItem.LastName"/>
        </div>
        <div class="form-group">
            Hair Color:<br/>
            <InputTextArea rows="1" @bind-Value="newAdultItem.HairColor"/>

        </div>
        <div class="form-group">
            Eye Color:<br/>
            <InputTextArea rows="1" @bind-Value="newAdultItem.EyeColor"/>
        </div>
        <div class="form-group">
            Age:<br/>
            <InputNumber @bind-Value="newAdultItem.Age"/>
        </div>
        <div class="form-group">
            Weight:<br/>
            <InputNumber @bind-Value="newAdultItem.Weight"/>
        </div>
        <div class="form-group">
            Height:<br/>
            <InputNumber @bind-Value="newAdultItem.Height"/>
        </div>
        <div class="form-group">
            Job Title:<br/>
            <InputTextArea rows="1" @bind-Value="newAdultItem.JobTitle"/>
        </div>
        <div class="form-group">
            Sex:<br/>
            <InputTextArea rows="1" @bind-Value="newAdultItem.Sex"/>
        </div>
        <p class="actions">
            <button class="btn btn-outline-dark" type="submit">Add</button>
            <button class="btn btn-outline-dark" type="button" @onclick="Families">Cancel</button>
        </p>
    </EditForm>
}
else
{
    <EditForm Model="@newFamilyItem" OnValidSubmit="@AddNewFamilyAsync">
        <DataAnnotationsValidator/>
        <ValidationSummary/>
        <div class="form-group">
            @if (newFamilyItem.Adults.Any())
            {
                @foreach (var item in newFamilyItem.Adults)
                {
                    <p>@item.FirstName @item.LastName Family</p>
                }
            }
        </div>
        <div class="form-group">
            Street name:<br/>
            <InputTextArea rows="1" @bind-Value="newFamilyItem.StreetName"/>
        </div>
        <div class="form-group">
            House number:<br/>
            <InputNumber @bind-Value="newFamilyItem.HouseNumber"/>
        </div>

        <p class="actions">
            <button class="btn btn-outline-dark" type="submit">Create</button>
            <button class="btn btn-outline-dark" type="button" @onclick="Families">Cancel</button>
        </p>
    </EditForm>
}

@code {
    private Family newFamilyItem = new Family();
    private bool added;
    private Adult newAdultItem = new Adult();

    private async Task  AddNewFamilyAsync()
    {
        await FamilyService.AddFamilyAsync(newFamilyItem);
        FamilyService.Family = newFamilyItem;
        NavigationManager.NavigateTo("/SeeFamily");
    }

    private async Task AddNewAdultAsync()
    {
        newFamilyItem.Adults.Add(newAdultItem);
        added = true;
    }

    private void Families()
    {
        NavigationManager.NavigateTo("/Families");
    }

}